<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Success</title>
    @Html.Partial("~/Views/Shared/MainHeader.cshtml")
    <script src="~/assets/js/jquery.min.js"></script>
    <script>        
        function printReceipt() {
            $("#Receipt").show();
            window.print();
        }
    </script>
</head>
<body>
    <div id="successMessage" class="alert alert-success" style="display:none;">
        <strong>Congrats!</strong> your order is placed successfully with order id:
    </div>
    <div id="errorMessage" class="alert alert-danger" style="display:none;">
        <strong>OOPS!</strong> There is some issue with placing the order. Please contact owner given at this address:
    </div>
    <div style="float: right;">
        <a href="javascript:printReceipt();" class="btn btn-success btn-lg">
            <span class="glyphicon glyphicon-print"></span> Print Receipt
        </a>
        <a href="javascript:BackToHome();" class="btn btn-default btn-lg">
            <span class="glyphicon"></span> Order Again
        </a>
    </div>  
    <br/>
    <!--START SCROLL TOP BUTTON -->
    <a class="scrollToTop" href="#">
        <i class="fa fa-angle-up"></i>
    </a>
    <!-- END SCROLL TOP BUTTON -->

    <div id="Receipt">
        <section>
            <div id="mailContent" class="container mainSection woocommerce-page">
                <div class="orderDetails woocommerce">
                    <h7 style="color:blue" id="txnId"><strong>Transaction Id: </strong></h7>
                    <div id="order_review" class="woocommerce-checkout-review-order">
                        <table ng-app="Items" id="productList" class="shop_table woocommerce-checkout-review-order-table" ng-controller="itemController" style="border:solid">
                            <thead style="background-color:silver;">
                                <tr>
                                    <th>Sr.</th>
                                    <th class="product-name">Item(s)</th>
                                    <th class="product-total">Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="cart_item" ng-repeat="product in productData">
                                    <td>{{$index +1}}</td>
                                    <td class="product-name">
                                        <span>{{product.Item}}</span>
                                        <strong class="product-quantity">× {{product.Quantity}}</strong>
                                    </td>
                                    <td class="product-total">
                                        <span class="woocommerce-Price-amount amount">
                                            <span class="woocommerce-Price-currencySymbol">₹</span> {{product.Price * product.Quantity }}
                                        </span>
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr class="cart-subtotal" style="background-color:silver;">
                                    <th>Subtotal</th>
                                    <td>
                                        <span class="woocommerce-Price-amount amount">
                                            <span class="woocommerce-Price-currencySymbol">₹</span><span id="spnSubTotal">
                                                {{ getSubTotal() }}
                                            </span>
                                        </span>
                                    </td>
                                </tr>
                                <tr class="cart-subtotal">
                                    <th>Delivery Charges</th>
                                    <td><span class="woocommerce-Price-amount amount"><span class="woocommerce-Price-currencySymbol">₹</span><span id="spnDelivery">{{ getdeliverycharge() }}</span></span></td>
                                </tr>
                                <tr class="cart-subtotal">
                                    <th>Total Discount in (%)</th>
                                    <td><span class="woocommerce-Price-amount amount"><span id="spnDelivery">{{ restaurantDiscount() }}</span>%</span></td>
                                </tr>
                                <tr class="order-total" style="background-color:silver;">
                                    <th>Total</th>
                                    <td><strong><span class="woocommerce-Price-amount amount"><span class="woocommerce-Price-currencySymbol">₹</span><span id="spnTotal">{{ toBePaid() }}</span></span></strong> </td>
                                </tr>
                            </tfoot>
                        </table>
                        <form>
                            <h3 class="card-title">Customer Details</h3>
                            <div class="card" style="width: 70%;border:solid;">
                                <div class="card-body">
                                    <h4 class="card-title">Name</h4>
                                    <h6 class="card-subtitle mb-2 text-muted cname"></h6>
                                    <h4 class="card-title">Contact</h4>
                                    <h6 class="card-subtitle mb-2 text-muted contact"></h6>
                                    <h4 class="card-title">Delivery Address:</h4>
                                    <p class="card-text address"></p>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <script type="text/javascript">
        var name = sessionStorage.getItem('name');
        var email = sessionStorage.getItem('email');
        var mobile = sessionStorage.getItem('mobile');
        var price = sessionStorage.getItem('price');
        if (price == undefined || price == null || price < 1) {
            price = 1;
        }
        var address = sessionStorage.getItem('FullAddress');
        $('h6.cname').html(name);
        $('h6.contact').html(mobile);
        $('p.address').html(address);
    </script>
    <script>
        var app = angular.module("Items", []).controller(
            "itemController", function ($scope, $http) {
                var request = {
                    method: 'get',
                    url: '',
                };
                var _descr = sessionStorage.getItem('Descr');
                var descr = JSON.parse(_descr);
                if (descr != null && descr != undefined) {
                    $http(request).then(function () {
                        $scope.productData = descr;
                        // calculate sub total for items
                        $scope.getSubTotal = function () {
                            var subTotal = 0;
                            for (var i = 0; i < $scope.productData.length; i++) {
                                var product = $scope.productData[i];
                                subTotal += (product.Price * product.Quantity);
                            }
                            return subTotal;
                        }
                    });

                }
            }
        )
        function calculateDelivery() {
            var delivery = 0;
            var discount = sessionStorage.getItem('RestaurantDiscount');
            var subTotal = $('#spnSubTotal').html().trim();
            if (subTotal == null || subTotal == undefined || subTotal == "") {
                delivery = 0;
            }
            if (discount == null || discount == undefined || discount == "") {
                delivery = 0;
            }
            else {
                var _subtotal = ((100 - parseFloat(discount)) * parseFloat(subTotal)) / 100;
                if (_subtotal < 100) {
                    delivery = 10;
                }
                else {
                    delivery = 0;
                }
            }
            return delivery;
        }
        function calculateRestaurantAmount() {
            var discount = sessionStorage.getItem('RestaurantDiscount');
            var delivery = calculateDelivery();
            var subTotal = $('#spnSubTotal').html().trim();
            var total = 0;
            var _discount = 0;
            if (discount == null || discount == undefined || discount == "") {
                return false;
            }
            if (subTotal == null || subTotal == undefined || subTotal == "") {
                return false;
            }
            else {
                total = ((100 - parseFloat(discount)) * parseFloat(subTotal)) / 100;
                return total + delivery;
            }

        }
    </script>
    <script type="text/javascript">
        var name = sessionStorage.getItem('name');
        var email = sessionStorage.getItem('email');
        var mobile = sessionStorage.getItem('mobile');

        var price = sessionStorage.getItem('price');
        if (price == undefined || price == null || price < 1) {
            price = 1;
        }
        var address = sessionStorage.getItem('FullAddress');
        var razorPayKey = "@ViewBag.RazorPayKey";
        $('h6.cname').html(name);
        $('h6.contact').html(mobile);
        $('p.address').html(address);
        function BackToHome() {
            if (confirm("Are you sure you want to cancel transaction and move back to Cart?"))
                window.location.href = "/";
            else
                return false;
        }
    </script>
    <script>
        var app = angular.module("Items", []).controller(
            "itemController", function ($scope, $http) {
                var request = {
                    method: 'get',
                    url: '',
                };
                var _descr = sessionStorage.getItem('Descr');
                var descr = JSON.parse(_descr);
                if (descr != null && descr != undefined) {
                    $http(request).then(function () {
                        $scope.productData = descr;
                        // calculate sub total for items
                        $scope.getSubTotal = function () {
                            var subTotal = 0;
                            for (var i = 0; i < $scope.productData.length; i++) {
                                var product = $scope.productData[i];
                                subTotal += (product.Price * product.Quantity);
                            }
                            return subTotal;
                        }
                        $scope.getdeliverycharge = function () {
                            var delivery = calculateDelivery();
                            return delivery;
                        }
                        $scope.restaurantDiscount = function () {
                            var discount = sessionStorage.getItem('RestaurantDiscount');
                            return discount;
                        }
                        $scope.toBePaid = function () {
                            var total = calculateRestaurantAmount();
                            return total;
                        }
                    });

                }
            }
        )
    </script>
    <script type="text/javascript">
        function SendMailToOwner() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "/Payment/SendMailToOwner", // Controller/View
                    data: { //Passing data
                        userDetails: $('div.orderDetails.woocommerce').html().trim(),
                        toEmail: sessionStorage.getItem('OwnerEmail'),
                        orderId: sessionStorage.getItem('orderId'),
                        paymentId: sessionStorage.getItem("razorpay_payment_id")
                    },
                    success: function (data) {
                        if (data == null) {
                            return false;
                        }
                        else {
                            //alert('SMS sent on your number ' + $('.contact').text());
                        }
                    }
                });
        }
        function SuccessSMS() {
            $.ajax(
                {
                    type: "POST", //HTTP POST Method
                    url: "SendSuccessSMS", // Controller/View
                    data: { //Passing data
                        phone: $('.contact').text(),
                        orderId: sessionStorage.getItem('orderId'),
                        paymentId: sessionStorage.getItem("razorpay_payment_id")
                    },
                    success: function (data) {
                        if (data == null) {
                            return false;
                        }
                        else {
                            //$('#successMessage').append(". \nSMS sent on your number " + $('.contact').text());
                        }
                    }
                });
        }

        var razorpay_payment_id = sessionStorage.getItem("razorpay_payment_id");
        var orderId = sessionStorage.getItem("orderId");
        if (razorpay_payment_id != undefined && razorpay_payment_id != null) {
            $('#txnId').append(razorpay_payment_id);
            $('#txnId').show();
        }
        else {
            $('#txnId').hide();
        }
        if (orderId != undefined && orderId != null) {
            $('#successMessage').append(orderId);
            $('#successMessage').show();
            $('#errorMessage').hide();
        }
        else {
            $('#errorMessage').append(sessionStorage.getItem('OwnerEmail'));
            $('#successMessage').hide();
            $('#errorMessage').show();

        }
        if (orderId != null && razorpay_payment_id != null) {
            //SuccessSMS();
            setTimeout(
                function () {
                    SendMailToOwner();
                }, 2000);
        }
    </script>
</body>
</html>
